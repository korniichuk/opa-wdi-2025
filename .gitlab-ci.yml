stages:
  - validate
  - plan
  - post-plan
  - apply

image:
  name: ubuntu:22.04

before_script:
  - apt -qq update
  - apt install -y jq wget unzip && apt clean
  - wget https://releases.hashicorp.com/terraform/1.11.2/terraform_1.11.2_linux_amd64.zip
  - unzip terraform_1.11.2_linux_amd64.zip
  - mv terraform /usr/local/bin/
  - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - rm -rf .terraform
  - terraform init
  - wget https://github.com/open-policy-agent/opa/releases/download/v1.2.0/opa_linux_amd64_static -O opa
  - mv opa /usr/local/bin/
  - chmod +x /usr/local/bin/opa
  - wget https://github.com/open-policy-agent/conftest/releases/download/v0.58.0/conftest_0.58.0_Linux_x86_64.tar.gz
  - tar xzf conftest_0.58.0_Linux_x86_64.tar.gz
  - mv conftest /usr/local/bin/

terraform-fmt:
  stage: validate
  script:
    - echo "terraform-fmt"
    - terraform --version
    - terraform fmt -recursive -check -diff

terraform-validate:
  stage: validate
  script:
    - echo "terraform-validate"
    - terraform --version
    - terraform validate

opa-check:
  stage: validate
  script:
    - echo "opa-check"
    - opa version
    - opa check policies/

opa-fmt:
  stage: validate
  script:
    - echo "opa-fmt"
    - opa version
    - opa fmt policies/ --fail --diff

terraform-plan:
  stage: plan
  script:
    - echo "terraform-plan"
    - terraform --version
    - terraform plan -out=plan
    - terraform show -json plan > plan.json
    - jq . plan.json
  artifacts:
    paths:
      - plan
      - plan.json

terraform-opa:
  stage: post-plan
  script:
    - echo "terraform-opa"
    - conftest --version
    - conftest test plan.json --policy policies/ --all-namespaces
  dependencies:
    - terraform-plan

terraform-apply:
  stage: apply
  script:
    - echo "terraform-apply"
    - terraform --version
    - terraform apply -input=false plan
  when: manual
  dependencies:
    - terraform-plan
